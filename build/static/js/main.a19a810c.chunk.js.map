{"version":3,"sources":["components/Header.js","constants.js","actions/index.js","components/TodoItem.js","components/ListTodo.js","components/AddTodo.js","components/CompleteTodo.js","components/ProcessTodo.js","components/TodoForm.js","App.js","reportWebVitals.js","reducers/todos.js","reducers/index.js","index.js"],"names":["Header","Component","LOAD_TODOS","GET_ALL_TODO","ADD_TODO","DELETE_TODO","COMPLETE_TODO","axios","defaults","baseURL","getAllTodo","dispatch","get","then","res","type","types","payload","data","catch","err","console","log","TodoItem","handleDelete","props","deleteTodo","todo","_id","handleCompleteTodo","completeTodo","this","className","onClick","isCompleted","task","connect","id","todoId","delete","put","ListTodo","showTodo","todos","map","index","getAllToDo","state","actions","AddTodo","handleChange","e","setState","target","name","value","handleClearForm","handleSubmit","preventDefault","addTodo","handleKeyDown","key","placeholder","onChange","onKeyDown","post","CompleteTodo","filter","ProcessTodo","TodoForm","Tabs","defaultActiveKey","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","action","rootReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a19a810c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>Basic Todo App</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export const LOAD_TODOS = \"LOAD_TODOS\"\r\nexport const GET_ALL_TODO = \"GET_ALL_TODO\"\r\nexport const ADD_TODO = \"ADD_TODO\"\r\nexport const DELETE_TODO = \"DELETE_TODO\"\r\nexport const COMPLETE_TODO = \"COMPLETE_TODO\"","import * as types from '../constants'\r\nimport axios from 'axios'\r\n\r\n// axios.defaults.baseURL =  process.env.baseURL || \"http://localhost:5000\";\r\naxios.defaults.baseURL =  \"https://huongzz.herokuapp.com\";\r\n\r\nexport const getAllTodo = () => dispatch => {\r\n    axios.get('/api/todos')\r\n        .then(res => {\r\n            dispatch({\r\n                type: types.GET_ALL_TODO,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const addTodo = (todo) => dispatch => {\r\n    axios.post('/api/todos', { task: todo })\r\n        .then((res) => {\r\n            dispatch({\r\n                type: types.ADD_TODO,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(err))\r\n}\r\n\r\nexport const deleteTodo = (todoId) => dispatch => {\r\n    axios.delete(`/api/todos/${todoId}`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: types.DELETE_TODO,\r\n                payload: res.data.todoId\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const completeTodo = (todoId) => dispatch => {\r\n    axios.put(`/api/todos/${todoId}/complete`, todoId)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: types.COMPLETE_TODO,\r\n                payload: res.data.todoId\r\n            })\r\n        })\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, completeTodo } from '../actions/index'\r\n\r\nclass TodoItem extends Component {\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteTodo(this.props.todo._id);\r\n    }\r\n\r\n    handleCompleteTodo = () => {\r\n        this.props.completeTodo(this.props.todo._id)\r\n    }\r\n\r\n    render() {\r\n        let { todo } = this.props;\r\n        return (\r\n            <li className=\"todo-item\" onClick={this.handleCompleteTodo}>\r\n                <p className=\"todo-task\">\r\n                    <span className=\"icon\">\r\n                        <i className={todo.isCompleted ? \"fas fa-check show\" : \"fas fa-check hidden\"}></i>\r\n                    </span>\r\n                    <span className={todo.isCompleted ? \"line\" : \"\"}>\r\n                        {todo.task}\r\n                    </span>\r\n                </p>\r\n                <span\r\n                    className=\"todo-icon\"\r\n                    onClick={this.handleDelete}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </span>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteTodo: (id) => {\r\n            dispatch(deleteTodo(id))\r\n        },\r\n        completeTodo: (id) => {\r\n            dispatch(completeTodo(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport TodoItem from './TodoItem';\r\n\r\nclass ListTodo extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAllToDo();\r\n    }\r\n\r\n    showTodo = (todos) => {\r\n        if (todos) {\r\n            return todos.map((todo, index) => {\r\n                return (\r\n                    <TodoItem todo={todo} key={index} />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { todos } = this.props;\r\n        return (\r\n            <>\r\n                <ul className=\"list-todo\">\r\n                    {this.showTodo(todos)}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos.todos,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllToDo: () => {\r\n            dispatch(actions.getAllTodo())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTodo);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index'\r\nclass AddTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClearForm = () => {\r\n        this.setState({\r\n            task: ''\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let { task } = this.state;\r\n        this.props.addTodo(task);\r\n        this.handleClearForm();\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.props.addTodo(e.target.value);\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pt-3 pb-3\">\r\n                <div className=\"form-group d-flex mb-0\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter task name\"\r\n                        onChange={this.handleChange}\r\n                        onKeyDown={this.handleKeyDown}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-outline-info\"\r\n                        onClick={this.handleSubmit}\r\n                    > Add </button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTodo: (todo) => {\r\n            dispatch(actions.addTodo(todo))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTodo);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport TodoItem from './TodoItem';\r\n\r\nclass CompleteTodo extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAllToDo();\r\n    }\r\n\r\n    showTodo = (todos) => {\r\n        if (todos) {\r\n            return todos.filter(todo => todo.isCompleted === true).map((todo, index) => {\r\n                return (\r\n                    <TodoItem todo={todo} key={index} />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { todos } = this.props;\r\n        return (\r\n            <div className=\"pt-3 pb-3\">\r\n                <ul className=\"list-todo\">\r\n                    {this.showTodo(todos)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos.todos,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllToDo: () => {\r\n            dispatch(actions.getAllTodo())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompleteTodo);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport TodoItem from './TodoItem';\r\n\r\nclass ProcessTodo extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAllToDo();\r\n    }\r\n\r\n    showTodo = (todos) => {\r\n        if (todos) {\r\n            return todos.filter(todo => todo.isCompleted === false).map((todo, index) => {\r\n                return (\r\n                    <TodoItem todo={todo} key={index} />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { todos } = this.props;\r\n        return (\r\n            <>\r\n                <ul className=\"list-todo\">\r\n                    {this.showTodo(todos)}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos.todos,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllToDo: () => {\r\n            dispatch(actions.getAllTodo())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessTodo);\r\n","import React, { Component } from 'react';\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport ListTodo from './ListTodo';\r\nimport AddTodo from './AddTodo';\r\nimport CompleteTodo from './CompleteTodo';\r\nimport ProcessTodo from './ProcessTodo';\r\n\r\nclass TodoForm extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"home\" title=\"Tất cả\">\r\n                        <AddTodo />\r\n                        <ListTodo />\r\n                    </Tab>\r\n                    <Tab eventKey=\"process\" title=\"Đang thực hiện\">\r\n                        <AddTodo />\r\n                        <ProcessTodo />\r\n                    </Tab>\r\n                    <Tab eventKey=\"completed\" title=\"Đã xong\">\r\n                        <CompleteTodo />\r\n                    </Tab>\r\n                </Tabs>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;\r\n","\nimport './App.css';\nimport React, { Component } from 'react'\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n        <div className=\"container\">\n          <div className=\"main\">\n            <div className=\"list-todo\">\n              <Header />\n              <TodoForm />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from '../constants'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    todos: []\r\n}\r\n\r\nconst todos = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ALL_TODO:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                todos: action.payload\r\n            }\r\n        case types.ADD_TODO:\r\n            return {\r\n                ...state,\r\n                todos: [action.payload, ...state.todos]\r\n            }\r\n        case types.DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => {\r\n                    return todo._id !== action.payload\r\n                })\r\n            }\r\n        case types.COMPLETE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo => {\r\n                    if (todo._id === action.payload)\r\n                        return {\r\n                            ...todo,\r\n                            isCompleted: !todo.isCompleted\r\n                        }\r\n                    return todo\r\n                })\r\n            }\r\n        case types.LOAD_TODOS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todos;","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\n\r\nconst rootReducers = combineReducers({\r\n    todos\r\n})\r\n\r\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducers from './reducers/index'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n  rootReducers,\n  compose(\n    applyMiddleware(thunk)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}